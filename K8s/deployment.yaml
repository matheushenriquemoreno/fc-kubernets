apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver # nome do pods do deployment
  replicas: 2
  template:
    metadata:
      name: "goserver"
      labels:
        app: "goserver"
    spec:
      containers:
      - name: goserver
        image: matheushenrique35/helloworldgo:v8.4

        startupProbe: # funciona como se fosse o rediness porém somente no processo de inicialização, após ele ser liberado o readiness e o liveness e acionado, evitando assim erros de execução quando minha aplicação demorar a executar
          httpGet:
            path: /healthz
            port: 8000
          periodSeconds: 3
          failureThreshold: 10
          initialDelaySeconds: 1

        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          periodSeconds: 3
          failureThreshold: 1

        livenessProbe: 
          httpGet:
            path: /healthz
            port: 8000 
          periodSeconds: 5
          failureThreshold: 3  
          timeoutSeconds: 1 

        envFrom:
          - configMapRef:
              name: goserver-enviroment # mapeia automaticamente os as chaves existentes no arquivo de configuracao
        volumeMounts:
          - mountPath: /go/myfamily
            name: config
            readOnly: true
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 256Mi
        # env: 
        #   - name: NAME
        #     valueFrom:
        #       configMapKeyRef:
        #         name: goserver-env
        #         key: name
          # - name: AGE
          #   value: '88'

      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: family.txt