apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver # nome do pods do deployment
  replicas: 2
  template:
    metadata:
      name: "goserver"
      labels:
        app: "goserver"
    spec:
      containers:
      - name: goserver
        image: matheushenrique35/helloworldgo:v8.3
        livenessProbe: # Utilizado para verificar a saude do container em caso de erro ele reinicia 
          httpGet:
            path: /healthz
            port: 8000 # a porta e a exporta pela minha imagem/codigo do container n√£o do service
          periodSeconds: 5
          failureThreshold: 3 # quantidade de requisicoes enviada para dar erro e reinicar a aplicacao 
          timeoutSeconds: 1 # espera ate 2 segundo para executar a requisicao
          successThreshold: 1

        envFrom:
          - configMapRef:
              name: goserver-enviroment # mapeia automaticamente os as chaves existentes no arquivo de configuracao
        volumeMounts:
          - mountPath: /go/myfamily
            name: config
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: family.txt